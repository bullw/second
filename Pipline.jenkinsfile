pipeline {
    agent any
    parameters {
        activeChoice(name: 'testcases', 
                     choices: ['testcases/api_test', 'testcases/scenario_test'], 
                     description: '选择测试模块（可多选）',
                     filterable: true) // 注意使用 filterable 代替 multiSelect
        string(
            name: 'alluredir',
            defaultValue: 'report',
            description: '指定alluredir的值，默认为report+时间戳'
        )
    }
    environment {
        build_date = sh(script: 'date +%Y%m%d%H%M%S', returnStdout: true).trim()
    }
    stages {
        stage('Prepare Test Modules') {
            steps {
                script {
                    // 获取用户选择的测试模块，并处理为单个字符串
                    def selectedTests = params.testcases.split(',').collect { it.trim() }
                    // 将选择的测试模块用空格连接
                    env.TEST_MODULES = selectedTests.join(' ')
                    echo "Test modules to run: ${env.TEST_MODULES}"
                }
            }
        }
        stage('Run Pytest Tests') {
            steps {
                sh "pytest ${env.TEST_MODULES} --alluredir ${params.alluredir}_${env.build_date}"
            }
        }
        stage('Generate Allure Report') {
            steps {
                sh "allure generate ${params.alluredir}_${env.build_date} -o allure-report_${env.build_date}"
            }
        }
    }
    post {
        always {
            emailext(
                subject: 'Pipeline Build Status: ${currentBuild.currentResult}',
                body: 'Details of the pipeline build: ${currentBuild.fullDisplayName}\nBuild result: ${currentBuild.currentResult}',
                to: 'zhaoyu.wang@thundersoft.com' // 替换为实际收件人邮箱地址
            )
        }
    }
}
