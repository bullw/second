pipeline {
    agent any
    parameters {
        choice(
            name: 'testcases',
            choices: ['api_test', 'scenario_test'],
            description: '选择测试模块'
        )
        choice(
            name: 'second_dropdown',
            choices: ['web_test', 'logi_test'],
            description: '根据第一个选择来确定可选的具体测试类型，可多选',
            multiSelect: true
        )
        string(
            name: 'alluredir',
            defaultValue: 'report',
            description: '指定alluredir的值，默认为report+时间戳'
        )
    }
    environment {
        build_date = sh(script: 'date +%Y%m%d%H%M%S', returnStdout: true).trim()
    }
    stages {
        stage('Prepare Test Modules') {
            steps {
                script {
                    def firstChoice = params.testcases
                    def second_choices = []
                    // 根据第一个下拉框的选择来动态设置第二个下拉框的选项
                    switch (firstChoice) {
                        case 'testcases':
                            second_choices = ['api_test','scenario_test']
                            break
                        case 'second_dropdown':
                            second_choices = ['web_test', 'logi_test']
                            break
                    }
                    // 将动态设置好的选项赋值给second_dropdown参数，使其可选内容更新
                    params.second_dropdown = second_choices
                    def testmodules = ""
                    for (int i = 0; i < second_choices.size(); i++) {
                        testmodules += "${firstChoice}${second_choices[i]} "
                    }
                    env.TEST_MODULES = testmodules.trim()
                }
            }
        }
        stage('Run Pytest Tests') {
            steps {
                sh "pytest ${env.TEST_MODULES} --alluredir ${params.alluredir}_${env.build_date}"
            }
        }
        stage('Generate Allure Report') {
            steps {
                sh "allure generate ${params.alluredir}${env.build_date} -o allure-report_${env.build_date}"
            }
        }
    }
    post {
        always {
            emailext(
                subject: 'Pipeline Build Status: ${currentBuild.currentResult}',
                body: 'Details of the pipeline build: ${currentBuild.fullDisplayName}\nBuild result: ${currentBuild.currentResult}',
                to: 'zhaoyu.wang@thundersoft.com'  // 替换为实际收件人邮箱地址
            )
        }
    }
}