[2024-12-20 07:09:27,012][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:09:27,065][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:28:06,111][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:28:06,166][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:48:34,451][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:48:34,469][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:53:55,043][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:54:11,484][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:54:11,534][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:54:11,568][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 07:54:11,581][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 07:54:11,582][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 07:54:11,605][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 07:54:11,610][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 07:54:11,638][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 07:54:14,153][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:14,153][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 07:54:14,154][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 07:54:14,154][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:54:14,154][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:54:14,155][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:14,155][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:14,155][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:14,155][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:14,155][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:14,162][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 07:54:14,162][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:54:14,217][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:14,218][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 07:54:14,218][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 07:54:14,219][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:54:14,219][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:54:14,220][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:14,220][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:14,220][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:14,221][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:14,221][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:14,228][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 07:54:14,639][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:14,640][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 07:54:14,641][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 07:54:14,642][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:54:14,642][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:54:14,643][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:14,644][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:14,645][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:14,645][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:14,646][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:14,655][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 07:54:14,656][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 07:54:14,657][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:54:14,746][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:14,747][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:14,747][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:14,747][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:14,749][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:14,749][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:14,749][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:14,749][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:14,749][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:14,750][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:14,750][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:14,750][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:14,750][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:14,795][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "msg": "恭喜，注册成功！"
}

[2024-12-20 07:54:14,795][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:14,795][test_02_register.py 36][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 07:54:14,796][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:54:14,947][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:14,948][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:14,957][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:15,060][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:15,060][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,061][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:15,061][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:15,062][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,063][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:15,063][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:15,063][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:15,063][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:15,064][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:15,064][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:15,064][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:15,064][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:15,071][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 07:54:15,071][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 07:54:15,071][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 07:54:15,072][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:54:15,161][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,161][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:15,161][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:15,286][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:15,286][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,286][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:15,287][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:15,288][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,288][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:15,288][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:15,289][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:15,289][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:15,289][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:15,289][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:15,290][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:15,290][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:15,334][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "msg": "恭喜，注册成功！"
}

[2024-12-20 07:54:15,335][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:15,541][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,542][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:15,542][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:15,575][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,575][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:54:15,576][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:15,576][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:54:15,576][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:15,576][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:54:15,577][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:15,577][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:15,577][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:15,587][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:54:15,587][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 07:54:15,648][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,649][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:54:15,649][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:15,650][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:54:15,650][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:15,650][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 07:54:15,651][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:15,651][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:15,651][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:15,671][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:54:15,672][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 07:54:15,673][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 07:54:15,673][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:54:15,707][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:54:15,708][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:15,708][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:54:15,709][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:15,709][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:54:15,710][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:54:15,710][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:15,710][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:15,717][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 07:54:15,738][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:15,738][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,738][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:54:15,739][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:54:15,740][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,821][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:15,821][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,822][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:54:15,822][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:54:15,823][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:15,913][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:15,913][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:15,913][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:54:15,914][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:54:15,915][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,016][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,016][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,017][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:54:16,017][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:54:16,018][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,111][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,112][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:54:16,112][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,173][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,173][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,174][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:54:16,174][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:54:16,175][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,222][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,222][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:54:16,223][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,292][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,293][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,293][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:16,293][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,294][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,295][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:16,295][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:16,295][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:16,296][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:16,296][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:16,296][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:16,297][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:16,297][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:16,319][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:16,319][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:16,374][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,374][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:16,375][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,510][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,511][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,511][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:16,512][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,513][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,519][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:16,522][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:16,525][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:16,526][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:16,526][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:16,527][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:16,528][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:16,528][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:16,541][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:16,542][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:16,613][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,614][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:16,614][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,693][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,693][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,694][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:16,694][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,695][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,695][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:16,695][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:16,695][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:16,695][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:16,696][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:16,696][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:16,696][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:16,696][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:16,702][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:16,702][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:16,781][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,810][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:16,811][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,852][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,853][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:16,853][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:16,854][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:16,854][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:16,855][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:16,855][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:16,855][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:16,856][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:16,872][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:16,873][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:16,945][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:16,946][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:16,947][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:16,947][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:16,948][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:16,948][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:16,948][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:16,949][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:16,949][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:16,950][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:16,950][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:16,951][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:16,951][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:16,968][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:16,968][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:17,004][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:17,004][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:17,004][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:17,055][conftest.py 29][INFO]: ******************************
[2024-12-20 07:54:17,055][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:54:17,056][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:54:17,056][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:54:17,057][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:54:17,057][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:54:17,057][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:54:17,057][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:54:17,058][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:54:17,058][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:54:17,058][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:54:17,059][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:54:17,059][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:54:17,066][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:54:17,066][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:54:17,096][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:54:17,096][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:54:17,096][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:27,473][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:27,497][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:27,505][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 07:57:27,511][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 07:57:27,511][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 07:57:27,519][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 07:57:27,522][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 07:57:27,534][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 07:57:29,349][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:29,358][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 07:57:29,359][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 07:57:29,359][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:29,362][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:29,363][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:29,364][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:29,365][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:29,365][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:29,366][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:29,379][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 07:57:29,379][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:29,446][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:29,449][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 07:57:29,450][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 07:57:29,451][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:29,451][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:29,452][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:29,454][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:29,454][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:29,454][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:29,455][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:29,463][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 07:57:29,464][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 07:57:29,464][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:29,621][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:29,621][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 07:57:29,622][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 07:57:29,622][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:29,623][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:29,624][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:29,626][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:29,626][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:29,627][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:29,628][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:29,634][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 07:57:29,634][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 07:57:29,635][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:29,727][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:29,728][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:29,728][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:29,729][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:29,730][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:29,731][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:29,731][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:29,732][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:29,733][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:29,734][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:29,734][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:29,735][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:29,735][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:29,743][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:29,744][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:30,173][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,173][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:30,173][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:30,238][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:30,238][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,238][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:30,239][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:30,240][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:30,240][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:30,240][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:30,240][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:30,241][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:30,241][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:30,241][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:30,241][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:30,241][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:30,248][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 07:57:30,248][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 07:57:30,248][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 07:57:30,248][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:30,374][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,378][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:30,379][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:30,447][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:30,449][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,450][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:30,451][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:30,452][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:30,452][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:30,452][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:30,453][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:30,453][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:30,453][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:30,471][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:30,474][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:30,474][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:30,480][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 07:57:30,480][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:30,481][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 07:57:30,481][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:30,641][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,642][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:30,642][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:30,685][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:30,687][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:30,695][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:30,696][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:30,696][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:30,697][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:30,697][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:30,698][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:30,698][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:30,704][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:30,710][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 07:57:30,792][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:30,793][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:30,793][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:30,794][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:30,794][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:30,794][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 07:57:30,795][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:30,795][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:30,795][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:30,810][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:30,811][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 07:57:30,811][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 07:57:30,811][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:30,853][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:30,859][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:30,860][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:30,860][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:30,862][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:30,862][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:30,863][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:30,863][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:30,874][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 07:57:30,882][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:30,883][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:30,883][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:30,884][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:30,885][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,016][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,016][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,017][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:31,017][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:31,018][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,132][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,133][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,133][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:31,133][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:31,135][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,243][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,244][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,246][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:31,246][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:31,247][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,299][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,299][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:31,300][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,357][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,358][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,358][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:31,359][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:31,360][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,446][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,450][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:31,451][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,530][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,532][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,532][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:31,533][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,533][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,560][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:31,560][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:31,560][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:31,560][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:31,561][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:31,561][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:31,561][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:31,562][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:31,571][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:31,571][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:31,648][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,652][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:31,655][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,731][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,731][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,731][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:31,732][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,733][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,733][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:31,733][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:31,733][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:31,734][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:31,734][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:31,734][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:31,734][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:31,735][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:31,745][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:31,746][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:31,808][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,808][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:31,808][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,846][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:31,849][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,850][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:31,851][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,853][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,853][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:31,853][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:31,854][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:31,855][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:31,856][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:31,856][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:31,857][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:31,857][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:31,864][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:31,864][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:31,903][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:31,903][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:31,903][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:31,927][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:31,928][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:31,928][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:31,929][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:31,929][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:31,931][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:31,934][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:31,935][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:31,935][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:31,952][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:31,959][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:32,017][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:32,018][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:32,018][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:32,018][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:32,020][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:32,020][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:32,020][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:32,021][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:32,021][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:32,022][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:32,022][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:32,022][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:32,023][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:32,036][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:32,037][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:32,067][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:32,068][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:32,068][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:32,151][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:32,151][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:32,152][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:32,152][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:32,153][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:32,153][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:32,153][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:32,154][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:32,154][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:32,154][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:32,154][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:32,154][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:32,154][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:32,160][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:32,171][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:32,224][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:32,224][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:32,225][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:36,175][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:36,209][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:36,226][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 07:57:36,229][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 07:57:36,229][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 07:57:36,238][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 07:57:36,245][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 07:57:36,253][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 07:57:37,715][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:37,715][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 07:57:37,716][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 07:57:37,717][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:37,717][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:37,718][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:37,718][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:37,718][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:37,718][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:37,719][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:37,727][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 07:57:37,728][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:37,789][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:37,790][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 07:57:37,790][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 07:57:37,790][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:37,792][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:37,793][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:37,793][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:37,793][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:37,793][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:37,794][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:37,876][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 07:57:37,877][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 07:57:37,877][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:37,967][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,002][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 07:57:38,005][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 07:57:38,005][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:38,005][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:38,007][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,012][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:38,018][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:38,019][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,019][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,026][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 07:57:38,036][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 07:57:38,037][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:38,152][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:38,152][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,153][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:38,153][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,155][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,156][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:38,156][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,156][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:38,157][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,157][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:38,158][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:38,158][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,158][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,195][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:38,195][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:38,526][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,526][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:38,527][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,605][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:38,606][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,607][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:38,607][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,609][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,609][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:38,610][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,610][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:38,610][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,610][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:38,611][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:38,611][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,611][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,618][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 07:57:38,618][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 07:57:38,619][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 07:57:38,619][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:38,700][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,700][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:38,701][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,740][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:38,740][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,741][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:38,741][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,743][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,743][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:38,744][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,744][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:38,744][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,744][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:38,745][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:38,745][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,745][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,755][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 07:57:38,755][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:38,755][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 07:57:38,756][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:38,813][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:38,814][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:38,814][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:38,837][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,838][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:38,838][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,838][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:38,839][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,839][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:38,840][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:38,840][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,841][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,858][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:38,858][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 07:57:38,922][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:38,924][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:38,925][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,926][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:38,927][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,927][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 07:57:38,927][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:38,928][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,928][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,936][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:38,937][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 07:57:38,937][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 07:57:38,938][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:38,985][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:38,986][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:38,986][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:38,986][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:38,987][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:38,987][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:38,988][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:38,988][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:38,998][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 07:57:39,005][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,005][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,005][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:39,006][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:39,007][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,121][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,122][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,122][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:39,123][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:39,124][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,233][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,234][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,234][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:39,234][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:39,236][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,426][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,426][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,426][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:39,427][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:39,428][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,498][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,498][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:39,498][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,555][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,555][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,556][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:39,556][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:39,557][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,608][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,609][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:39,609][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,667][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,668][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,668][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:39,668][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,669][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,669][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:39,670][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:39,670][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:39,670][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:39,671][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:39,672][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:39,672][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:39,673][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:39,711][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:39,712][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:39,748][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,749][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:39,749][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,794][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:39,794][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,795][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:39,821][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,824][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:39,824][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:39,836][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:39,844][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:39,845][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:39,846][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:39,847][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:39,848][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:39,849][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:39,867][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:39,867][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:39,918][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:39,921][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:39,922][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:39,992][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:40,002][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,002][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:40,002][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:40,003][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:40,004][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:40,005][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:40,006][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:40,006][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:40,006][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:40,006][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:40,006][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:40,007][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:40,037][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:40,037][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:40,061][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,079][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:40,080][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:40,167][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:40,168][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:40,168][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:40,168][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:40,169][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:40,169][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:40,169][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:40,170][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:40,170][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:40,181][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:40,182][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:40,238][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:40,238][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,239][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:40,239][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:40,240][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:40,241][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:40,241][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:40,242][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:40,242][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:40,242][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:40,242][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:40,243][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:40,243][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:40,253][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:40,254][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:40,313][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,322][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:40,323][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:40,467][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:40,468][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,468][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:40,469][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:40,470][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:40,470][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:40,470][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:40,471][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:40,471][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:40,471][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:40,472][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:40,472][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:40,472][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:40,481][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:40,482][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:40,559][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:40,560][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:40,560][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:42,960][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:43,008][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 07:57:43,018][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 07:57:43,021][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 07:57:43,021][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 07:57:43,029][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 07:57:43,029][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 07:57:43,039][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 07:57:44,481][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:44,481][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 07:57:44,482][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 07:57:44,482][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:44,482][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:44,482][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:44,482][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:44,483][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:44,483][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:44,483][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:44,493][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 07:57:44,493][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:44,560][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:44,561][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 07:57:44,561][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 07:57:44,562][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:44,562][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:44,562][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:44,562][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:44,563][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:44,563][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:44,563][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:44,568][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 07:57:44,569][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 07:57:44,569][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:44,620][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:44,628][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 07:57:44,628][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 07:57:44,629][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 07:57:44,629][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 07:57:44,629][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:44,630][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:44,630][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:44,633][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:44,633][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:44,663][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 07:57:44,663][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 07:57:44,664][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:44,786][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:44,786][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:44,786][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:44,787][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:44,788][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:44,788][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:44,791][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:44,808][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:44,809][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:44,810][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:44,812][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:44,812][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:44,812][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:44,837][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:44,838][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:45,291][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,292][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:45,293][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:45,372][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:45,373][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,373][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:45,373][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:45,375][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:45,375][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:45,375][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:45,375][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:45,376][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:45,376][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:45,395][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:45,395][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:45,396][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:45,403][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 07:57:45,403][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 07:57:45,404][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 07:57:45,404][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:45,455][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,455][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:45,456][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:45,511][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:45,512][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,513][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:45,513][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:45,514][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:45,515][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:45,515][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:45,516][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:45,516][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:45,516][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:45,517][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:45,517][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:45,517][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:45,524][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 07:57:45,524][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:45,525][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 07:57:45,525][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:45,583][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,583][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:45,584][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:45,612][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:45,612][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:45,614][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:45,615][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:45,615][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:45,615][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:45,616][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:45,616][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:45,616][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:45,651][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:45,652][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 07:57:45,753][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:45,777][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:45,791][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:45,791][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:45,792][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:45,792][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 07:57:45,792][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:45,793][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:45,793][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:45,799][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 07:57:45,799][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 07:57:45,800][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 07:57:45,800][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 07:57:45,914][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 07:57:45,914][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:45,915][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 07:57:45,931][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:45,932][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 07:57:45,932][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 07:57:45,933][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:45,933][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:45,939][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 07:57:45,947][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:45,948][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:45,949][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:45,949][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:45,950][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:46,280][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:46,281][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,284][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:46,284][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:46,286][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:46,463][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:46,465][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,466][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 07:57:46,466][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 07:57:46,468][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:46,686][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:46,686][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,686][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:46,686][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:46,687][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:46,783][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,783][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:46,783][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:46,824][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:46,824][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,825][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 07:57:46,826][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 07:57:46,827][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:46,904][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:46,905][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 07:57:46,906][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,005][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:47,006][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,006][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:47,006][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,007][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,008][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,009][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,009][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,010][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,010][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,011][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,011][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,011][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,020][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,021][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,071][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,072][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:47,073][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,172][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:47,173][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,173][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:47,174][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,175][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,175][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,175][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,176][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,176][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,176][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,177][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,177][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,178][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,188][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,189][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,211][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,211][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:47,212][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,239][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:47,240][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,240][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:47,241][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,242][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,242][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,242][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,243][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,243][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,244][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,244][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,244][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,245][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,254][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,254][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,288][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,289][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:47,289][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,320][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,320][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,321][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,321][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,322][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,322][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,322][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,323][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,323][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,332][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,332][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,377][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:47,378][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,378][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:47,379][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,380][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,381][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,381][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,381][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,382][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,382][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,382][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,383][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,383][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,391][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,391][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,413][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,413][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:47,414][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,439][conftest.py 29][INFO]: ******************************
[2024-12-20 07:57:47,440][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,440][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 07:57:47,440][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 07:57:47,441][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 07:57:47,442][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 07:57:47,442][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 07:57:47,442][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 07:57:47,442][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 07:57:47,443][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 07:57:47,443][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 07:57:47,443][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 07:57:47,443][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 07:57:47,452][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 07:57:47,452][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 07:57:47,477][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 07:57:47,477][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 07:57:47,478][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:26:46,296][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:26:46,328][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:26:46,342][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:26:46,345][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:26:46,346][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:26:46,353][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:26:46,353][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:26:46,367][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:27:21,330][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:27:21,412][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:27:21,472][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:27:21,477][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:27:21,477][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:27:21,491][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:27:21,491][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:27:21,528][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:28:15,414][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:28:15,445][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:28:15,452][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:28:15,481][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:28:15,482][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:28:15,488][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:28:15,488][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:28:15,496][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:28:16,913][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:16,913][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 16:28:16,921][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 16:28:16,927][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:16,927][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:16,928][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:16,930][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:16,933][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:16,935][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:16,936][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:16,977][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 16:28:16,978][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:16,984][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:16,984][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 16:28:16,985][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 16:28:16,985][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:16,986][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:16,986][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:16,986][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:16,987][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:16,987][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:16,988][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,065][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 16:28:17,067][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 16:28:17,068][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:17,072][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,073][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 16:28:17,073][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 16:28:17,073][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:17,074][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:17,075][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,075][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,075][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:17,075][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,075][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,130][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 16:28:17,130][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 16:28:17,131][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:17,215][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,215][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,216][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,216][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,217][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,218][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,218][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,219][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,219][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,220][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,220][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,221][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,221][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,229][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:17,230][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:17,548][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,549][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:17,550][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,557][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,557][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,558][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,558][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,560][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,565][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,566][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,566][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,567][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,568][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,568][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,569][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,569][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,576][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 16:28:17,577][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 16:28:17,577][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 16:28:17,579][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:17,583][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,583][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:17,584][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,589][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,589][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,589][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,590][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,590][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,591][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,591][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,591][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,592][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,594][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,596][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,597][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,597][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,603][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 16:28:17,604][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:17,604][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 16:28:17,604][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:17,608][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,609][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:17,609][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,612][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,612][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:17,613][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,614][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:17,614][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,614][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:28:17,614][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:17,615][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,615][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,622][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:28:17,623][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 16:28:17,636][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,636][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:17,636][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,637][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:17,637][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,637][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 16:28:17,637][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:17,638][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,638][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,651][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:28:17,665][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 16:28:17,666][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 16:28:17,666][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:17,669][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:17,670][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,670][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:17,670][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,670][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:28:17,671][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:17,671][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,671][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,681][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 16:28:17,691][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,691][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,691][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:17,691][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:17,692][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,708][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,709][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,709][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:17,709][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:17,710][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,727][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,727][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,728][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:17,728][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:17,729][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,769][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,769][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,770][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:28:17,770][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:28:17,771][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,810][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,811][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:28:17,811][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,819][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,820][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,820][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:28:17,820][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:28:17,821][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,862][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,862][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:28:17,863][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,894][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,894][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,894][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,895][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,895][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,896][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,896][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,896][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,896][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,896][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,897][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,897][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,897][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,903][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:17,904][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:17,916][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,916][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:17,916][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,922][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,923][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,923][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,924][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,924][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,924][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,925][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,925][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,925][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,926][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,926][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,926][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,926][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:17,932][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:17,933][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:17,956][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,956][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:17,957][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,962][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:17,963][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:17,963][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:17,963][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:17,964][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:17,964][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:17,964][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:17,965][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:17,965][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:17,965][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:17,965][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:17,965][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:17,966][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:18,018][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:18,024][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:18,059][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:18,060][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:18,060][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:18,064][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:18,065][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:18,065][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:18,065][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:18,066][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:18,066][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:18,066][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:18,066][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:18,066][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:18,085][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:18,086][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:18,109][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:18,109][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:18,109][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:18,109][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:18,110][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:18,110][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:18,111][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:18,111][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:18,111][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:18,111][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:18,111][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:18,111][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:18,112][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:18,133][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:18,134][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:18,149][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:18,149][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:18,149][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:18,171][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:18,171][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:18,172][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:18,172][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:18,173][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:18,173][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:18,177][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:18,185][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:18,192][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:18,193][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:18,193][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:18,193][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:18,193][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:18,200][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:18,200][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:18,235][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:18,244][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:18,245][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:45,920][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:28:45,980][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:28:45,989][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:28:45,992][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:28:45,992][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:28:46,001][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:28:46,001][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:28:46,158][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:28:47,428][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,429][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 16:28:47,429][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 16:28:47,430][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:47,430][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:47,430][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,431][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,431][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,432][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,433][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,440][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 16:28:47,441][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,444][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,445][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 16:28:47,446][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 16:28:47,446][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:47,446][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:47,447][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,447][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,447][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,447][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,448][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,510][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 16:28:47,513][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 16:28:47,513][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,518][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,518][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 16:28:47,518][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 16:28:47,518][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:28:47,519][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:28:47,519][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,519][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,519][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,520][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,520][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,580][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 16:28:47,581][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 16:28:47,581][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,590][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:47,590][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,591][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:47,592][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,593][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,594][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:47,595][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,595][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:47,595][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,596][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,596][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:47,596][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,596][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,604][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:47,604][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:47,872][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,872][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:47,873][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,892][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:47,893][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,893][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:47,893][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,894][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,895][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:47,895][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,896][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:47,896][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,896][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,897][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:47,897][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,897][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,904][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 16:28:47,905][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 16:28:47,905][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 16:28:47,905][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,912][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,912][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:47,913][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,924][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:47,924][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,924][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:47,925][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,926][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,927][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:47,927][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,927][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:47,927][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,928][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:47,928][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:47,928][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,928][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,937][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 16:28:47,937][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:47,939][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 16:28:47,939][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,944][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:47,944][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:47,945][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:47,948][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,949][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:47,949][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,950][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:47,950][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,950][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:28:47,951][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,951][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,952][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,961][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:28:47,961][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 16:28:47,976][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:47,976][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:47,976][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,977][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:47,977][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,977][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 16:28:47,978][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,978][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,978][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:47,988][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:28:47,988][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 16:28:47,990][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 16:28:47,990][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:28:47,993][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:28:47,993][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:47,994][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:28:47,994][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:47,994][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:28:47,995][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:28:47,995][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:47,995][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,002][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 16:28:48,006][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,006][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,007][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:48,007][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:48,008][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,028][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,028][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,029][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:48,029][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:48,030][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,048][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,049][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,049][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:28:48,049][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:28:48,050][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,079][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,081][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,081][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:28:48,082][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:28:48,083][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,196][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,197][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:28:48,197][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,212][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,212][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,213][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:28:48,213][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:28:48,214][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,239][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,239][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:28:48,240][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,266][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,266][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,266][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:48,267][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,267][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,268][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,268][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,268][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,268][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,269][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,269][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,269][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,270][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,304][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,305][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,319][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,320][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:48,320][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,418][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,419][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,419][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:48,420][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,421][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,421][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,421][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,422][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,423][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,423][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,423][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,424][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,424][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,439][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,440][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,498][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,499][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:48,499][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,507][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,507][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,508][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:48,508][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,509][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,509][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,510][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,510][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,510][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,510][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,511][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,511][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,511][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,554][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,555][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,585][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,586][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:48,586][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,591][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,592][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,592][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,592][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,593][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,593][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,593][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,593][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,594][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,602][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,603][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,664][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,664][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,664][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:48,665][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,665][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,666][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,666][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,666][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,666][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,666][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,667][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,667][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,667][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,677][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,678][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,744][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,747][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:48,749][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,762][conftest.py 29][INFO]: ******************************
[2024-12-20 16:28:48,763][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,763][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:28:48,763][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:28:48,764][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:28:48,764][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:28:48,764][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:28:48,764][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:28:48,765][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:28:48,766][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:28:48,766][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:28:48,766][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:28:48,767][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:28:48,792][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:28:48,793][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:28:48,811][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:28:48,811][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:28:48,811][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:26,056][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:29:26,081][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:29:26,098][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:29:26,107][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:29:26,109][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:29:26,120][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:29:26,121][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:29:26,134][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:29:27,589][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:27,590][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 16:29:27,590][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 16:29:27,590][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:27,591][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:27,591][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:27,591][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:27,600][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:27,600][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:27,600][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:27,635][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 16:29:27,635][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:27,638][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:27,638][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 16:29:27,638][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 16:29:27,639][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:27,639][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:27,639][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:27,639][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:27,639][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:27,640][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:27,640][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:27,755][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 16:29:27,772][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 16:29:27,772][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:27,784][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:27,787][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 16:29:27,796][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 16:29:27,796][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:27,796][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:27,797][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:27,797][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:27,798][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:27,798][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:27,799][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:27,840][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 16:29:27,846][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 16:29:27,847][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:27,865][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:27,866][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:27,866][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:27,867][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:27,868][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:27,868][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:27,868][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:27,869][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:27,869][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:27,869][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:27,869][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:27,870][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:27,870][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:27,887][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:27,888][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,094][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,095][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,095][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,135][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,136][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,136][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,136][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,137][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,137][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,138][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,138][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,138][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,138][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,139][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "3",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,139][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,139][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,145][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2003, 
  "msg": "输入的性别只能是 0(男) 或 1(女)！！！"
}

[2024-12-20 16:29:28,146][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 3, 深圳市宝安区
[2024-12-20 16:29:28,146][test_02_register.py 36][INFO]: code ==>> 期望结果：2003， 实际结果：【 2003 】
[2024-12-20 16:29:28,147][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:28,152][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,152][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,152][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,158][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,158][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,158][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,158][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,159][test_02_register.py 30][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,159][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,160][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,160][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,161][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,161][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,161][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "wintest4",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,162][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,162][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,168][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2002, 
  "msg": "用户名已存在，注册失败！！！"
}

[2024-12-20 16:29:28,168][test_02_register.py 10][INFO]: 步骤1 ==>> 注册用户 ==>> wintest4, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,168][test_02_register.py 36][INFO]: code ==>> 期望结果：2002， 实际结果：【 2002 】
[2024-12-20 16:29:28,169][test_02_register.py 39][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:28,197][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,197][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,197][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,200][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,200][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:28,201][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,201][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:28,201][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,201][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:29:28,202][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:28,202][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,202][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,211][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:29:28,211][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 16:29:28,231][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,231][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:28,232][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,232][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:28,233][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,233][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 16:29:28,233][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:28,234][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,234][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,242][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:29:28,243][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 16:29:28,243][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 16:29:28,244][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:28,247][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:28,247][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,247][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:28,248][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,248][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:29:28,248][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:28,249][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,249][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,255][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 16:29:28,259][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,259][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,259][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:28,259][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:28,284][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,304][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,304][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,304][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:28,305][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:28,305][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,379][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,384][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,385][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:28,387][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:28,396][test_04_update_user.py 37][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,460][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,461][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,461][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:29:28,461][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:29:28,462][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,482][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,482][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:29:28,483][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,494][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,495][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,495][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:29:28,495][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:29:28,496][test_05_delete_user.py 34][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,520][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,520][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:29:28,521][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,554][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,555][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,555][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,556][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,557][test_01_register_login_list.py 43][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,557][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,558][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,558][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,558][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,559][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,559][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,560][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,560][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,581][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,582][test_01_register_login_list.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,602][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,602][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,603][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,609][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,609][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,610][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,610][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,610][test_02_register_login_update.py 54][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,611][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,611][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,611][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,612][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,612][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,612][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,612][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,612][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,621][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,621][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,649][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,649][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,650][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,657][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,665][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,670][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,670][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,671][test_02_register_login_update.py 96][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,672][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,672][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,673][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,673][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,674][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,674][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,675][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,675][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,704][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,704][test_02_register_login_update.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,753][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,754][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,754][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,760][test_03_register_login_delete.py 44][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,760][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,761][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,761][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,761][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,761][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,762][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,762][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,762][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,768][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,768][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,785][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,785][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,786][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,786][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,787][test_03_register_login_delete.py 84][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,788][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,788][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,788][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,788][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,789][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,789][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,789][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,789][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,801][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,802][test_03_register_login_delete.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,835][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,835][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,835][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,878][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:28,879][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,880][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:28,880][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:28,881][test_04_repeat_register.py 38][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:28,881][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/register
[2024-12-20 16:29:28,882][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:28,882][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2024-12-20 16:29:28,883][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:28,883][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:28,884][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> {
    "username": "测试test",
    "password": "123456",
    "sex": "1",
    "telephone": "13599999999",
    "address": "深圳市宝安区"
}
[2024-12-20 16:29:28,884][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:28,884][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:28,894][user.py 71][INFO]: 注册用户 ==>> 返回结果 ==>> {
  "code": 2005, 
  "msg": "手机号已被注册！！！"
}

[2024-12-20 16:29:28,895][test_04_repeat_register.py 9][INFO]: 步骤1 ==>> 注册用户 ==>> 测试test, 123456, 13599999999, 1, 深圳市宝安区
[2024-12-20 16:29:28,919][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:28,920][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:28,920][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:43,745][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:29:43,781][read_data.py 35][INFO]: 加载 /data/Workspace/pytestDemo/config/setting.ini 文件......
[2024-12-20 16:29:43,796][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/base_data.yml 文件......
[2024-12-20 16:29:43,803][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'wintest', 'password': '123456'}, 'init_sql': {'insert_delete_user': ["INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')", "DELETE FROM user WHERE username = '测试test'"], 'delete_register_user': "DELETE FROM user WHERE username = '测试test'", 'update_user_telephone': "UPDATE user SET telephone = '13500010004' WHERE id = 4"}} 
[2024-12-20 16:29:43,803][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/api_test_data.yml 文件......
[2024-12-20 16:29:43,812][read_data.py 24][INFO]: 读到数据 ==>>  {'test_get_all_user_info': [[True, 0, '查询成功']], 'test_get_get_one_user_info': [['wintest4', True, 0, '查询成功'], ['wintest1111', False, '1004', '查不到相关用户']], 'test_register_user': [['测试test', '123456', '13599999999', '1', '深圳市宝安区', True, 0, '注册成功'], ['测试test', '123456', '13599999999', '3', '深圳市宝安区', False, 2003, '输入的性别只能是 0(男) 或 1(女)'], ['wintest4', '123456', '13599999999', '1', '深圳市宝安区', False, 2002, '用户名已存在']], 'test_login_user': [['wintest', '123456', True, 0, '登录成功'], ['测试test', '123456', False, 1003, '用户名不存在']], 'test_update_user': [[4, '123456', '13500010014', '1', '深圳市宝安区', True, 0, '修改用户信息成功'], [4, '123456', '1350001001', '1', '深圳市宝安区', False, 4008, '手机号格式不正确'], [111, '123456', '13500010014', '1', '深圳市宝安区', False, 4005, '用户ID不存在']], 'test_delete_user': [['测试test', True, 0, '删除用户信息成功'], ['wintest3', False, 3006, '该用户不允许删除']]} 
[2024-12-20 16:29:43,812][read_data.py 21][INFO]: 加载 /data/Workspace/pytestDemo/data/scenario_test_data.yml 文件......
[2024-12-20 16:29:43,823][read_data.py 24][INFO]: 读到数据 ==>>  {'test_user_register_login_list': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '查询成功'}, 'test_user_repeat_register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 2002, 'except_msg': '用户名已存在，注册失败'}, 'test_user_register_login_update_success': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': True, 'except_code': 0, 'except_msg': '修改用户信息成功'}, 'test_user_register_login_update_fail': {'register': {'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区'}, 'login': {'admin_user': 'wintest', 'admin_pwd': '123456'}, 'update': {'new_password': '123456', 'new_telephone': '13599999998', 'new_sex': '1', 'new_address': '深圳市坪山区'}, 'except_result': False, 'except_code': 4005, 'except_msg': '修改的用户ID不存在'}, 'test_user_register_login_delete_success': {'admin_user': 'wintest', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': True, 'except_code': 0, 'except_msg': '删除用户信息成功'}, 'test_user_register_login_delete_fail': {'admin_user': 'wintest4', 'admin_pwd': '123456', 'username': '测试test', 'password': '123456', 'telephone': '13599999999', 'sex': '1', 'address': '深圳市宝安区', 'except_result': False, 'except_code': 3004, 'except_msg': '当前用户不是管理员用户'}} 
[2024-12-20 16:29:45,735][test_01_get_user_info.py 32][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:45,735][test_01_get_user_info.py 10][INFO]: 步骤1 ==>> 获取所有用户信息
[2024-12-20 16:29:45,735][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users
[2024-12-20 16:29:45,736][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:45,736][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:45,736][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:45,736][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:45,736][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:45,737][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:45,737][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:45,743][test_01_get_user_info.py 38][INFO]: code ==>> 期望结果：0， 实际结果：0
[2024-12-20 16:29:45,744][test_01_get_user_info.py 41][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:45,792][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:45,792][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest4
[2024-12-20 16:29:45,793][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest4
[2024-12-20 16:29:45,793][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:45,794][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:45,795][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:45,795][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:45,796][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:45,796][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:45,797][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:45,803][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": 0, 
  "data": [
    {
      "address": "深圳市宝安区", 
      "id": 2, 
      "password": "ef0875fbf6504207d1c6d2d6c11ca2c0", 
      "role": 1, 
      "sex": 1, 
      "telephone": "13599999999", 
      "username": "wintest4"
    }
  ], 
  "msg": "查询成功"
}

[2024-12-20 16:29:45,804][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：0， 实际结果：【 0 】
[2024-12-20 16:29:45,804][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:45,843][test_01_get_user_info.py 52][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:45,843][test_01_get_user_info.py 15][INFO]: 步骤1 ==>> 获取某个用户信息：wintest1111
[2024-12-20 16:29:45,844][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/users/wintest1111
[2024-12-20 16:29:45,844][rest_client.py 52][INFO]: 接口请求方式 ==>> GET
[2024-12-20 16:29:45,844][rest_client.py 54][INFO]: 接口请求头 ==>> null
[2024-12-20 16:29:45,845][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:45,845][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> null
[2024-12-20 16:29:45,846][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:45,846][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:45,846][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:45,852][user.py 38][INFO]: 查看单个用户 ==>> 返回结果 ==>> {
  "code": "1004", 
  "msg": "查不到相关用户的信息"
}

[2024-12-20 16:29:45,852][test_01_get_user_info.py 58][INFO]: code ==>> 期望结果：1004， 实际结果：【 1004 】
[2024-12-20 16:29:45,853][test_01_get_user_info.py 61][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:45,916][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:45,917][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:45,917][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:45,918][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,208][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,208][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:46,209][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,251][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:46,252][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,252][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:46,253][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,350][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,350][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:46,351][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,388][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:46,389][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,389][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:46,390][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,475][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,475][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:46,476][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:46,508][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:46,509][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:46,509][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:46,510][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:46,510][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:46,511][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:29:46,511][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:46,511][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:46,512][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:46,519][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:29:46,520][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：wintest
[2024-12-20 16:29:46,647][test_03_login.py 27][INFO]: *************** 开始执行用例 ***************
[2024-12-20 16:29:46,647][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:46,647][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:46,648][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:46,648][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:46,648][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "测试test",
    "password": "123456"
}
[2024-12-20 16:29:46,648][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:46,649][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:46,649][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:46,661][user.py 99][INFO]: 登录用户 ==>> 返回结果 ==>> {
  "code": 1003, 
  "msg": "用户名不存在！！！"
}

[2024-12-20 16:29:46,661][test_03_login.py 10][INFO]: 步骤1 ==>> 登录用户：测试test
[2024-12-20 16:29:46,662][test_03_login.py 33][INFO]: code ==>> 期望结果：1003， 实际结果：【 1003 】
[2024-12-20 16:29:46,662][test_03_login.py 36][INFO]: *************** 结束执行用例 ***************
[2024-12-20 16:29:46,725][rest_client.py 51][INFO]: 接口请求地址 ==>> http://10.0.20.98:9999/login
[2024-12-20 16:29:46,726][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2024-12-20 16:29:46,726][rest_client.py 54][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/x-www-form-urlencoded"
}
[2024-12-20 16:29:46,727][rest_client.py 55][INFO]: 接口请求 params 参数 ==>> null
[2024-12-20 16:29:46,727][rest_client.py 56][INFO]: 接口请求体 data 参数 ==>> {
    "username": "wintest",
    "password": "123456"
}
[2024-12-20 16:29:46,728][rest_client.py 57][INFO]: 接口请求体 json 参数 ==>> null
[2024-12-20 16:29:46,728][rest_client.py 58][INFO]: 接口上传附件 files 参数 ==>> None
[2024-12-20 16:29:46,729][rest_client.py 59][INFO]: 接口 cookies 参数 ==>> null
[2024-12-20 16:29:46,736][conftest.py 40][INFO]: 前置步骤 ==>> 管理员 wintest 登录，返回信息 为：123456
[2024-12-20 16:29:46,742][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:46,744][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,746][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:46,747][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:46,900][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:46,901][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:46,902][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:46,904][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:47,120][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,121][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,121][conftest.py 97][INFO]: 修改用户操作：手工修改用户的手机号，以便用例重复执行
[2024-12-20 16:29:47,121][conftest.py 98][INFO]: 执行SQL：UPDATE user SET telephone = '13500010004' WHERE id = 4
[2024-12-20 16:29:47,204][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,205][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,205][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:29:47,206][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:29:47,330][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,331][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:29:47,331][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,376][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,377][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,377][conftest.py 65][INFO]: 删除用户操作：插入新用户--准备用于删除用户
[2024-12-20 16:29:47,377][conftest.py 66][INFO]: 执行前置SQL：INSERT INTO user(username, password, role, sex, telephone, address) VALUES('测试test', '123456', '1', '1', '13488888888', '北京市海淀区')
[2024-12-20 16:29:47,444][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,444][conftest.py 72][INFO]: 删除用户操作：手工清理处理失败的数据
[2024-12-20 16:29:47,445][conftest.py 73][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,496][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,497][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,498][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:47,499][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,559][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,560][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:47,560][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,613][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,613][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,614][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:47,614][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,637][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,637][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:47,638][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,663][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,663][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,664][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:47,664][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,720][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,721][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:47,744][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,860][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,860][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,861][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:47,861][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,900][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,901][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:47,901][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,932][conftest.py 29][INFO]: ******************************
[2024-12-20 16:29:47,933][conftest.py 30][INFO]: 前置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,935][conftest.py 82][INFO]: 注册用户操作：清理用户--准备注册新用户
[2024-12-20 16:29:47,935][conftest.py 83][INFO]: 执行前置SQL：DELETE FROM user WHERE username = '测试test'
[2024-12-20 16:29:47,961][conftest.py 35][INFO]: 后置步骤开始 ==>> 清理数据
[2024-12-20 16:29:47,961][conftest.py 87][INFO]: 注册用户操作：删除注册的用户
[2024-12-20 16:29:47,962][conftest.py 88][INFO]: 执行后置SQL：DELETE FROM user WHERE username = '测试test'
